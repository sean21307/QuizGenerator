Question #8:

#R1#: int, random, 1, 3
#R2#: int, random, 2, 4
#R3#: int, random, 2, 3
#S1#: {f,a}
#S2#: {g,b}
#N1#: from #S1#
#N2#: from #S2#

:Code:
public class DynamicCode {
    public static void main(String[] args) {
        String result = "";

        result += "#N1##R1#-#R2#" + "#N2#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R3# * #R1# * #R3# * #R2#) + "-" + (#R2# * #R3#) + "#N1##R1#-#R2#: 100%\n";
        result += "#N1##R1#-#R2#" + "#N2#" + (#R1#) + "-" + (#R2#) + "#N2#" + (#R1# * #R3#) + "-" + (#R2#) + "#N1##R1#-#R2#: 50%\n";
        result += "#N1##R1#-#R2#" + "#N1#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R1# * #R3# * #R2# * #R3#) + "-" + (#R2# * #R3#) + ": 25%\n";
        result += "#N1##R1#-#R2#" + "#N2#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R1# * #R3# * #R2# * #R3#) + "-" + (#R2# * #R3#) + "#N1#" + (#R1# * #R3# * #R2# * #R3#) + "-#R2#: 37.5%\n";
        result += "#N1##R1#-#R2#" + "#N2#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R1# * #R3# * #R2# * #R3#) + "-" + (#R2# * #R3#) + "#N1#" + (#R1# * #R3# * #R2# * #R3#) + "-" + (#R2# * #R3#) + ": 37.5%\n";
        result += "#N1##R1#-#R2#" + "#N2#" + (#R1# * #R3#) + "-" + (#R2# * #R3#) + "#N2#" + (#R1# * #R3# * #R2# * #R3#) + "-" + (#R2# * #R3#) + ": 37.5%\n";
        result += "#N1##R1#-#R2#" + "#N1#" + (#R2# * #R3#) + "-" + (#R2# * #R3# - 1) + "#N1#" + (#R2# * #R3# + #R1# * #R3#) + "-" + (#R2# * #R3#) + "#N1#" + (#R1#*#R3#*#R2#*#R3#) + ": 5%\n";
        result += "#N1##R1#-#R2#" + "#N2##R1#-#R2#: 5%\n";
        result += "#N1##R1#-#R2#: 5%\n";
        result += "#N1#" + (#R1#*#R3#) + "-" + (#R2#) + ": 0%\n";
        result += "#N1#" + (#R1#*#R3#) + "-" + (#R2#*#R3#) + ": 0%\n";
        result += "#N2#" + (#R1#*#R3#*#R3#*#R2#) + "-" + (#R1#*#R3#*#R3#) + ": 15%\n";
        result += "#N2##R1#-#R2#: 0%\n";
        result += "#N2#" + (#R1# * #R3#) + "-#N2#" + (#R2# * #R3#) + ": 0%\n";
        result += "#N1#+#R1#-#R2#: 0%\n";
        result += "nothing: 0%\n";


        System.out.println(result);
    }
}

:EndCode:

:Text:
Read the method definition below:

public static void #N1#(int x, int y) {
    System.out.print("#N1#" + x + "-" + y);
    #N2#(x * #R3#, y * #R3#);
    System.out.print("#N1#" + x + "-" + y);
}

public static void #N2#(int x, int y) {
    System.out.print("#N2#" + x + "-" + y);
    x = x * y;
    System.out.print("#N2#" + x + "-" + y);
}

Given the code above, what is printed by the following code segment?

#N1#(#R1#, #R2#);

Note that if there is no output, please choose "nothing"
:EndText:

Solution: compile


Question #5:

#R1#: int, random, 2, 5
#R2#: #R1#, add, 1
#R3#: #R1#, add, 2
#R4#: #R1#, add, 3
#R5#: #R1#, add, 4

:Code:
public class DynamicCode {
    public static void main(String[] args) {
        String result = "";

        result += "#R3##R1##R3##R4##R1##R3##R5#: 100%\n";
        result += "#R3##R1##R3##R4##R5#: 50%\n";
        result += "#R1##R1##R3##R1##R5#: 0%\n";
        result += "#R1##R3##R4#: 25%\n";
        result += "2023024: 50%\n"; // not replaced because the indices are always the same
        result += "#R1##R2##R3##R4##R5#" + (#R1# - 1) + "#R2##R3##R1##R3##R5#: 15%\n";
        result += "#R3##R4##R4##R3##R4##R5##R5##R4##R5#: 0%\n";
        result += "023: 0%\n";
        result += "024: 5%\n";
        result += "#R1##R3##R2#: 0%\n";
        result += "2: 0%\n";
        result += "#R1#: 0%\n";
        result += "#R3#: 0%\n";
        result += "nothing: 0%";

        System.out.println(result);
    }
}

:EndCode:

:Text:
Specify the output of the following code segment.

int[] numbers = {#R1#, #R2#, #R3#, #R4#, #R5#};
for (int i = 0; i < numbers.length; i++) {
    if (i == 2) {
        System.out.print(numbers[i]);
    } else if (i == 3) {
        System.out.print(numbers[i - 3]);
        System.out.print(numbers[i - 1]);
        System.out.print(numbers[i]);
    } else if (i == 3) {
        System.out.print(numbers[i - 4]);
        System.out.print(numbers[i - 2]);
        System.out.print(numbers[i]);
    }
}

Note that if there is no output, please choose "nothing"
:EndText:

Solution: compile




Question #13:

#R1#: int, random, 1, 10
#R2#: int, random, 1, 10

:Code:
public class DynamicCode {
    class Container
    {
        int type;
        int beans;

        public Container()
        {
            //System.out.print("a");
            this.type = 0;
            this.beans = 0;
        }

        public Container(int type, int beans)
        {
            //System.out.print("b");
            this.type = type;
            this.beans = beans;
        }

        public String toString()
        {
            return this.type + "-" + this.beans;
        }


    }

    public static void main(String[] args) {
        DynamicCode outerInstance = new DynamicCode();

        Container red = outerInstance.new Container();
        Container green = outerInstance.new Container(#R1#, #R2#);


        String result = "";

        result += "ab0-0$#R1#-#R2#: 100%\n";
        result += "0-0$#R1#-#R2#: 80%\n";
        result += "b0-0$#R1#-#R2#: 90%\n";
        result += "a0-0$b#R1#-#R2#: 50%\n";
        result += "a$0-0b#R1#-#R2#: 50%\n";
        result += "ab#R1#-#R2#: 50%\n";
        result += "a$#R1#-#R2#: 25%\n";
        result += "ab0$green: 20%\n";
        result += "#R1#-#R2#: 25%\n";
        result += "aba$b: 20%\n";
        result += "a$b: 0%\n";
        result += "#R1#$#R2#: 0%\n";
        result += "red$green: 0%\n";
        result += "red$2green: 0%\n";
        result += "green-: 0%\n";
        result += "green: 0%\n";
        result += "Container()$ Container(#R1#, #R2#): 0%\n";
        result += "nothing: 0%\n";

        System.out.println(result);
    }
}


:EndCode:

:Text:
Read the method definition below:

public class Container
{
    int type;
    int beans;

    public Container()
    {
        System.out.print("a");
        this.type = 0;
        this.beans = 0;
    }

    public Container(int type, int beans)
    {
        System.out.print("b");
        this.type = type;
        this.beans = beans;
    }

    public String toString()
    {
        return this.type + "-" + this.beans;
    }
}

What is the output of the following code segment?

    Container red = new Container();
    Container green = new Container(#R1#, #R2#);
    System.out.print(red + "$");
    System.out.print(green);


Note that if there is no output, please choose "nothing"
:EndText:

Solution: compile


Question #14:

#R1#: int, random, 2, 8
#R2#: int, random, 2, 8
#R3#: int, random, 8, 12

:Code:
public class DynamicCode {
    public static void main(String[] args) {
        String result = "";

        result += (#R1# + #R2#) + "-" + (#R3# * 2) + ": 100%\n";
        result += (#R1# + #R2#) + "-" + (#R1# * 2) + ": 50%\n";
        result += (#R1# + #R2#) + "-" + (#R1# * #R3#) + ": 50%\n";
        result += (#R1# + #R2#) + " #R1#-" + (#R2# * #R3#) + ": 0%\n";
        result += (#R1# + #R2#) + "-" + (#R3#) + ": 50%\n";
        result += (#R1# + #R2# + 2) + "-" + (#R3# * 2) + ": 80%\n";
        result += "#R1##R2#-" + (#R3# * 2) + ": 80%\n";
        result += "1-" + (#R3# * 2) + ": 50%\n";
        result += "#R1#-" + (#R3# * 2) + ": 50%\n";
        result += (#R1# * #R3#) + "-" + (#R2# * #R3#) + ": 0%\n";
        result += ((#R1# + #R2#) * 2) + ": 0%\n";
        result += (#R1# * 2) + ": 0%\n";
        result += (#R1#) + ": 0%\n";
        result += "#R1#-#R2#: 0%\n";
        result += "6-4: 0%\n";

        System.out.println(result);
    }
}

:EndCode:

:Text:
Read the following class definition,

public class Pantry
{

    private int stages;
    private int height;

    public Pantry(int stages, int height) {
        this.stages = stages;
        this.height = height;
    }

    public int get() {
        return this.stages + this.height;
    }

    public static int calc(int stages)
    {
        return stages * 2;
    }

}

What is the output of the following code segment?

Pantry food = new Pantry(#R1#, #R2#);
int x = food.get();
System.out.print(x + "-");
int y = Pantry.calc(#R3#);
System.out.print(y);

Note that if there is no output, please choose "nothing"
:EndText:

Solution: compile



